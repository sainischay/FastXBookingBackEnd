// <auto-generated />
using System;
using FastXBookingSample.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FastXBookingSample.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20240402114954_Booking_Migration")]
    partial class Booking_Migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FastXBookingSample.Models.Amenity", b =>
                {
                    b.Property<int>("AmenityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmenityId"), 1L, 1);

                    b.Property<string>("AmenityName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("AmenityId");

                    b.ToTable("Amenity", (string)null);
                });

            modelBuilder.Entity("FastXBookingSample.Models.BoardingPoint", b =>
                {
                    b.Property<int>("BoardingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoardingId"), 1L, 1);

                    b.Property<int?>("BusId")
                        .HasColumnType("int");

                    b.Property<string>("PlaceName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<TimeSpan>("Timings")
                        .HasColumnType("time");

                    b.HasKey("BoardingId")
                        .HasName("PK__Boarding__057071EA38123087");

                    b.HasIndex("BusId");

                    b.ToTable("BoardingPoints");
                });

            modelBuilder.Entity("FastXBookingSample.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"), 1L, 1);

                    b.Property<DateTime>("BookingDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("BusId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("BusId");

                    b.HasIndex("UserId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("FastXBookingSample.Models.BookingHistory", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("BookingDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("BusName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BusNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<string>("Seats")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("BookId")
                        .HasName("PK__BookingH__3DE0C20740FA3004");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingHistory", (string)null);
                });

            modelBuilder.Entity("FastXBookingSample.Models.Bus", b =>
                {
                    b.Property<int>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusId"), 1L, 1);

                    b.Property<string>("BusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BusNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("BusOperator")
                        .HasColumnType("int");

                    b.Property<string>("BusType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("date");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("Fare")
                        .HasColumnType("int");

                    b.Property<int>("NoOfSeats")
                        .HasColumnType("int");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("BusId");

                    b.HasIndex("BusOperator");

                    b.ToTable("Bus", (string)null);
                });

            modelBuilder.Entity("FastXBookingSample.Models.BusAmenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AmenityId")
                        .HasColumnType("int");

                    b.Property<int?>("BusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AmenityId");

                    b.HasIndex("BusId");

                    b.ToTable("Bus_Amenities", (string)null);
                });

            modelBuilder.Entity("FastXBookingSample.Models.BusSeat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"), 1L, 1);

                    b.Property<int?>("BusId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<int?>("SeatNo")
                        .HasColumnType("int");

                    b.HasKey("SeatId")
                        .HasName("PK__BusSeats__311713F37D9D17DE");

                    b.HasIndex("BusId");

                    b.ToTable("BusSeats");
                });

            modelBuilder.Entity("FastXBookingSample.Models.DroppingPoint", b =>
                {
                    b.Property<int>("DroppingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DroppingId"), 1L, 1);

                    b.Property<int?>("BusId")
                        .HasColumnType("int");

                    b.Property<string>("PlaceName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<TimeSpan>("Timings")
                        .HasColumnType("time");

                    b.HasKey("DroppingId")
                        .HasName("PK__Dropping__DCC8059A043CD558");

                    b.HasIndex("BusId");

                    b.ToTable("DroppingPoints");
                });

            modelBuilder.Entity("FastXBookingSample.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"), 1L, 1);

                    b.Property<int?>("BusId")
                        .HasColumnType("int");

                    b.Property<string>("PlaceName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("RouteId");

                    b.HasIndex("BusId");

                    b.ToTable("Route", (string)null);
                });

            modelBuilder.Entity("FastXBookingSample.Models.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("CardDetails")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.HasKey("SeatId");

                    b.HasIndex("BookingId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("FastXBookingSample.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FastXBookingSample.Models.BoardingPoint", b =>
                {
                    b.HasOne("FastXBookingSample.Models.Bus", "Bus")
                        .WithMany("BoardingPoints")
                        .HasForeignKey("BusId")
                        .HasConstraintName("FK__BoardingP__BusId__534D60F1");

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("FastXBookingSample.Models.Booking", b =>
                {
                    b.HasOne("FastXBookingSample.Models.Bus", "Bus")
                        .WithMany("Bookings")
                        .HasForeignKey("BusId")
                        .HasConstraintName("FK__Booking__BusId__619B8048");

                    b.HasOne("FastXBookingSample.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Booking__UserId__60A75C0F");

                    b.Navigation("Bus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FastXBookingSample.Models.BookingHistory", b =>
                {
                    b.HasOne("FastXBookingSample.Models.Booking", "Booking")
                        .WithMany("BookingHistories")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__BookingHi__Booki__6FE99F9F");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("FastXBookingSample.Models.Bus", b =>
                {
                    b.HasOne("FastXBookingSample.Models.User", "BusOperatorNavigation")
                        .WithMany("Buses")
                        .HasForeignKey("BusOperator")
                        .HasConstraintName("FK__Bus__BusOperator__4D94879B");

                    b.Navigation("BusOperatorNavigation");
                });

            modelBuilder.Entity("FastXBookingSample.Models.BusAmenity", b =>
                {
                    b.HasOne("FastXBookingSample.Models.Amenity", "Amenity")
                        .WithMany("BusAmenities")
                        .HasForeignKey("AmenityId")
                        .HasConstraintName("FK__Bus_Ameni__Ameni__73BA3083");

                    b.HasOne("FastXBookingSample.Models.Bus", "Bus")
                        .WithMany("BusAmenities")
                        .HasForeignKey("BusId")
                        .HasConstraintName("FK__Bus_Ameni__BusId__72C60C4A");

                    b.Navigation("Amenity");

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("FastXBookingSample.Models.BusSeat", b =>
                {
                    b.HasOne("FastXBookingSample.Models.Bus", "Bus")
                        .WithMany("BusSeats")
                        .HasForeignKey("BusId")
                        .HasConstraintName("FK__BusSeats__BusId__5070F446");

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("FastXBookingSample.Models.DroppingPoint", b =>
                {
                    b.HasOne("FastXBookingSample.Models.Bus", "Bus")
                        .WithMany("DroppingPoints")
                        .HasForeignKey("BusId")
                        .HasConstraintName("FK__DroppingP__BusId__5629CD9C");

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("FastXBookingSample.Models.Route", b =>
                {
                    b.HasOne("FastXBookingSample.Models.Bus", "Bus")
                        .WithMany("Routes")
                        .HasForeignKey("BusId")
                        .HasConstraintName("FK__Route__BusId__59063A47");

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("FastXBookingSample.Models.Seat", b =>
                {
                    b.HasOne("FastXBookingSample.Models.Booking", "Booking")
                        .WithMany("Seats")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__Seats__BookingId__6477ECF3");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("FastXBookingSample.Models.Amenity", b =>
                {
                    b.Navigation("BusAmenities");
                });

            modelBuilder.Entity("FastXBookingSample.Models.Booking", b =>
                {
                    b.Navigation("BookingHistories");

                    b.Navigation("Seats");
                });

            modelBuilder.Entity("FastXBookingSample.Models.Bus", b =>
                {
                    b.Navigation("BoardingPoints");

                    b.Navigation("Bookings");

                    b.Navigation("BusAmenities");

                    b.Navigation("BusSeats");

                    b.Navigation("DroppingPoints");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("FastXBookingSample.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Buses");
                });
#pragma warning restore 612, 618
        }
    }
}
